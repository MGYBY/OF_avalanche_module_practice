/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2006                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

// width of the block
width 2.00;
nwidth 16;

// computational domain size
xn1  #calc "$width*4.00";
xn2  #calc "$xn1+$width*1.00";
xn3  #calc "$xn2+$width*2.00";

yn1  #calc "$width*3.00";
yn2  #calc "$yn1+$width*1.00";
yn3  #calc "$yn2+$width*3.00";

// cell number
nx1 #calc "$xn1/$width*$nwidth";
nx2 #calc "($xn2-$xn1)/$width*$nwidth";
nx3 #calc "($xn3-$xn2)/$width*$nwidth";

ny1 #calc "$yn1/$width*$nwidth";
ny2 #calc "($yn2-$yn1)/$width*$nwidth";
ny3 #calc "($yn3-$yn2)/$width*$nwidth";

// vertices 0~15, 16~31
vertices
(
    (0 0 0) // 0
    ($xn1 0 0) // 1
    ($xn2 0 0) // 2
    ($xn3 0 0) // 3

    ($xn3 $yn1 0) // 4
    ($xn3 $yn2 0) // 5
    ($xn3 $yn3 0) // 6

    ($xn2 $yn3 0) // 7
    ($xn1 $yn3 0) // 8
    (0 $yn3 0) // 9
    (0 $yn2 0) // 10
    (0 $yn1 0) // 11

    ($xn1 $yn1 0) // 12
    ($xn2 $yn1 0) // 13
    ($xn2 $yn2 0) // 14
    ($xn1 $yn2 0) // 15

    (0 0 0.1) // 16
    ($xn1 0 0.1) // 17
    ($xn2 0 0.1) // 18
    ($xn3 0 0.1) // 19

    ($xn3 $yn1 0.1) // 20
    ($xn3 $yn2 0.1) // 21
    ($xn3 $yn3 0.1) // 22

    ($xn2 $yn3 0.1) // 23
    ($xn1 $yn3 0.1) // 24
    (0 $yn3 0.1) // 25
    (0 $yn2 0.1) // 26
    (0 $yn1 0.1) // 27

    ($xn1 $yn1 0.1) // 28
    ($xn2 $yn1 0.1) // 29
    ($xn2 $yn2 0.1) // 30
    ($xn1 $yn2 0.1) // 31

);

blocks
(
    hex (0 1 12 11 16 17 28 27) ($nx1 $ny1 1) simpleGrading (1 1 1) // 1
    hex (1 2 13 12 17 18 29 28) ($nx2 $ny1 1) simpleGrading (1 1 1) // 2
    hex (2 3 4 13 18 19 20 29) ($nx3 $ny1 1) simpleGrading (1 1 1) // 3
    hex (13 4 5 14 29 20 21 30) ($nx3 $ny2 1) simpleGrading (1 1 1) // 4
    hex (14 5 6 7 30 21 22 23) ($nx3 $ny3 1) simpleGrading (1 1 1) // 5
    hex (15 14 7 8 31 30 23 24) ($nx2 $ny3 1) simpleGrading (1 1 1) // 6
    hex (10 15 8 9 26 31 24 25) ($nx1 $ny3 1) simpleGrading (1 1 1) // 7
    hex (11 12 15 10 27 28 31 26) ($nx1 $ny2 1) simpleGrading (1 1 1) // 8
);

patches
(
    patch bed
    (
        (0 1 12 11)
        (1 2 13 12)
        (2 3 4 13)
        (13 4 5 14)
        (14 5 6 7)
        (15 14 7 8)
        (10 15 8 9)
        (11 12 15 10)
        
    )
    patch top
    (
        (16 17 28 27)
        (17 18 29 28)
        (18 19 20 29)
        (29 20 21 30)
        (30 21 22 23)
        (31 30 23 24)
        (26 31 24 25)
        (27 28 31 26)
    )
    patch outlet
    (
        (5 6 22 21)
        (4 5 21 20)
        (3 4 20 19)
    )
    patch side
    (
        (0 1 17 16)
        (1 2 18 17)
        (2 3 19 18)

        (9 8 24 25)
        (8 7 23 24)
        (7 6 22 23)
    )
    patch inlet
    (
        (0 11 27 16)
        (11 10 26 27)
        (10 9 25 26)
    )
    wall frontBlockWall
    (
        (12 15 31 28)
    )
    wall rearBlockWall
    (
        (13 14 30 29)
    )
    wall sideBlockWall
    (
        (12 13 29 28)
        (15 14 30 31)
    )
);

mergePatchPairs
(
);


// ************************************************************************* //
